Resources:
  sidekickBus3BCAB053:
    Type: AWS::Events::EventBus
    Properties:
      Name: SidekickBus
    Metadata:
      aws:cdk:path: SideKickStack/sidekickBus/Resource
  FrontendBucketEFE2E19C:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: aws-cdk:cr-owned:f4b5fdef
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SideKickStack/FrontendBucket/Resource
  FrontendBucketPolicy1DFF75D9:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: FrontendBucketEFE2E19C
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - FrontendBucketEFE2E19C
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendBucketEFE2E19C
                        - Arn
                    - /*
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - CloudfrontDistributionOrigin1S3Origin80C6EA5F
                  - S3CanonicalUserId
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - FrontendBucketEFE2E19C
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: SideKickStack/FrontendBucket/Policy/Resource
  FrontendBucketAutoDeleteObjectsCustomResourceDB860B32:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: FrontendBucketEFE2E19C
    DependsOn:
      - FrontendBucketPolicy1DFF75D9
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SideKickStack/FrontendBucket/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SideKickStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-339712865666-eu-west-1
        S3Key: 2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4.zip
      Timeout: 900
      MemorySize: 128
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs18.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: FrontendBucketEFE2E19C
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: SideKickStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4
      aws:asset:property: Code
  CloudfrontDistributionOrigin1S3Origin80C6EA5F:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Identity for SideKickStackCloudfrontDistributionOrigin1D5135B37
    Metadata:
      aws:cdk:path: SideKickStack/CloudfrontDistribution/Origin1/S3Origin/Resource
  CloudfrontDistributionE1C514EC:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          Compress: true
          TargetOriginId: SideKickStackCloudfrontDistributionOrigin1D5135B37
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName:
              Fn::GetAtt:
                - FrontendBucketEFE2E19C
                - RegionalDomainName
            Id: SideKickStackCloudfrontDistributionOrigin1D5135B37
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - ""
                  - - origin-access-identity/cloudfront/
                    - Ref: CloudfrontDistributionOrigin1S3Origin80C6EA5F
    Metadata:
      aws:cdk:path: SideKickStack/CloudfrontDistribution/Resource
  caseBucketC8DD2304:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: sidekick-cases
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - PUT
              - GET
            AllowedOrigins:
              - Fn::Join:
                  - ""
                  - - https://
                    - Fn::GetAtt:
                        - CloudfrontDistributionE1C514EC
                        - DomainName
              - http://localhost:3000
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SideKickStack/caseBucket/Resource
  caseBucketPolicyA4B3F164:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: caseBucketC8DD2304
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - caseBucketC8DD2304
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - caseBucketC8DD2304
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: SideKickStack/caseBucket/Policy/Resource
  caseBucketAutoDeleteObjectsCustomResourceE72D3F6E:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: caseBucketC8DD2304
    DependsOn:
      - caseBucketPolicyA4B3F164
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SideKickStack/caseBucket/AutoDeleteObjectsCustomResource/Default
  ingestionstatemachinesidekickApiLambdaServiceRoleB350AB2E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SideKickStack/ingestion-state-machine/sidekickApiLambda/ServiceRole/Resource
  ingestionstatemachinesidekickApiLambdaServiceRoleDefaultPolicy40929AE6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: textract:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: ingestionstatemachinesidekickApiLambdaServiceRoleDefaultPolicy40929AE6
      Roles:
        - Ref: ingestionstatemachinesidekickApiLambdaServiceRoleB350AB2E
    Metadata:
      aws:cdk:path: SideKickStack/ingestion-state-machine/sidekickApiLambda/ServiceRole/DefaultPolicy/Resource
  ingestionstatemachinesidekickApiLambdaE5F3A3E6:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-339712865666-eu-west-1
        S3Key: 377efc1ac279ea540057e820abf764b20a090773669e0e3bf4ac13e565cd7ec4.zip
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - ingestionstatemachinesidekickApiLambdaServiceRoleB350AB2E
          - Arn
      Runtime: python3.9
    DependsOn:
      - ingestionstatemachinesidekickApiLambdaServiceRoleDefaultPolicy40929AE6
      - ingestionstatemachinesidekickApiLambdaServiceRoleB350AB2E
    Metadata:
      aws:cdk:path: SideKickStack/ingestion-state-machine/sidekickApiLambda/Resource
      aws:asset:path: asset.377efc1ac279ea540057e820abf764b20a090773669e0e3bf4ac13e565cd7ec4
      aws:asset:is-bundled: true
      aws:asset:property: Code
  ingestionstatemachineStateMachineRole3043E50A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: states.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: SideKickStack/ingestion-state-machine/StateMachine/Role/Resource
  ingestionstatemachineStateMachineRoleDefaultPolicy91CE380D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ingestionstatemachinesidekickApiLambdaE5F3A3E6
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ingestionstatemachinesidekickApiLambdaE5F3A3E6
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: ingestionstatemachineStateMachineRoleDefaultPolicy91CE380D
      Roles:
        - Ref: ingestionstatemachineStateMachineRole3043E50A
    Metadata:
      aws:cdk:path: SideKickStack/ingestion-state-machine/StateMachine/Role/DefaultPolicy/Resource
  ingestionstatemachineStateMachineFBFFBA38:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"StartState","States":{"StartState":{"Type":"Pass","Next":"Call Textract With Lambda"},"Call Textract With Lambda":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - ingestionstatemachinesidekickApiLambdaE5F3A3E6
                - Arn
            - '","Payload.$":"$"}}}}'
      RoleArn:
        Fn::GetAtt:
          - ingestionstatemachineStateMachineRole3043E50A
          - Arn
    DependsOn:
      - ingestionstatemachineStateMachineRoleDefaultPolicy91CE380D
      - ingestionstatemachineStateMachineRole3043E50A
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SideKickStack/ingestion-state-machine/StateMachine/Resource
  ingestionstatemachineStateMachineEventsRole6AF5B0D7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: SideKickStack/ingestion-state-machine/StateMachine/EventsRole/Resource
  ingestionstatemachineStateMachineEventsRoleDefaultPolicyADFFF3A8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: states:StartExecution
            Effect: Allow
            Resource:
              Ref: ingestionstatemachineStateMachineFBFFBA38
        Version: "2012-10-17"
      PolicyName: ingestionstatemachineStateMachineEventsRoleDefaultPolicyADFFF3A8
      Roles:
        - Ref: ingestionstatemachineStateMachineEventsRole6AF5B0D7
    Metadata:
      aws:cdk:path: SideKickStack/ingestion-state-machine/StateMachine/EventsRole/DefaultPolicy/Resource
  ingestionstatemachinesfnrule80009270:
    Type: AWS::Events::Rule
    Properties:
      EventBusName:
        Ref: sidekickBus3BCAB053
      EventPattern:
        detail-type:
          - START-DOCUMENT-EXTRACTION
      State: ENABLED
      Targets:
        - Arn:
            Ref: ingestionstatemachineStateMachineFBFFBA38
          Id: Target0
          RoleArn:
            Fn::GetAtt:
              - ingestionstatemachineStateMachineEventsRole6AF5B0D7
              - Arn
    Metadata:
      aws:cdk:path: SideKickStack/ingestion-state-machine/sfn-rule/Resource
  sidekickApiLambdaServiceRole55313979:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApiLambda/ServiceRole/Resource
  sidekickApiLambdaServiceRoleDefaultPolicy7950B24D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - sidekickTableFDBE0BEC
                - Arn
        Version: "2012-10-17"
      PolicyName: sidekickApiLambdaServiceRoleDefaultPolicy7950B24D
      Roles:
        - Ref: sidekickApiLambdaServiceRole55313979
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApiLambda/ServiceRole/DefaultPolicy/Resource
  sidekickApiLambda9B98FB90:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-339712865666-eu-west-1
        S3Key: f7edb6e1c70027b1185ef1a2db7bb0700c5734c50316ba0ba9ed366a652c920e.zip
      Environment:
        Variables:
          INGESTION_SFN:
            Ref: ingestionstatemachineStateMachineFBFFBA38
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - sidekickApiLambdaServiceRole55313979
          - Arn
      Runtime: python3.9
    DependsOn:
      - sidekickApiLambdaServiceRoleDefaultPolicy7950B24D
      - sidekickApiLambdaServiceRole55313979
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApiLambda/Resource
      aws:asset:path: asset.f7edb6e1c70027b1185ef1a2db7bb0700c5734c50316ba0ba9ed366a652c920e
      aws:asset:is-bundled: true
      aws:asset:property: Code
  sidekickTableFDBE0BEC:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SideKickStack/sidekickTable/Resource
  AuthorizerLogGroup2583BEC8:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SideKickStack/AuthorizerLogGroup/Resource
  AuthorizerLambdaServiceRole30885946:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SideKickStack/AuthorizerLambda/ServiceRole/Resource
  AuthorizerLambda972EEEAB:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-339712865666-eu-west-1
        S3Key: 0728ebc161eaeabf2deb4de2862c4cd211eb26e7163aa1dd417f1afebd03f38c.zip
      Handler: index.handler
      LoggingConfig:
        LogGroup:
          Ref: AuthorizerLogGroup2583BEC8
      Role:
        Fn::GetAtt:
          - AuthorizerLambdaServiceRole30885946
          - Arn
      Runtime: python3.9
    DependsOn:
      - AuthorizerLambdaServiceRole30885946
    Metadata:
      aws:cdk:path: SideKickStack/AuthorizerLambda/Resource
      aws:asset:path: asset.0728ebc161eaeabf2deb4de2862c4cd211eb26e7163aa1dd417f1afebd03f38c
      aws:asset:is-bundled: true
      aws:asset:property: Code
  AuthorizerLambdaSideKickStackApiAuthorizer429ED155Permissions48A76F73:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - AuthorizerLambda972EEEAB
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /authorizers/
            - Ref: ApiAuthorizer68095F41
    Metadata:
      aws:cdk:path: SideKickStack/AuthorizerLambda/SideKickStackApiAuthorizer429ED155:Permissions
  BucketDeploymentAwsCliLayerB018DCE1:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket: cdk-hnb659fds-assets-339712865666-eu-west-1
        S3Key: 3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip
      Description: /opt/awscli/aws
    Metadata:
      aws:cdk:path: SideKickStack/BucketDeployment/AwsCliLayer/Resource
      aws:asset:path: asset.3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
  BucketDeploymentCustomResourceCB7E2133:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - cdk-hnb659fds-assets-339712865666-eu-west-1
      SourceObjectKeys:
        - 2dc4b24c534b41a6bb9b331a0b84b8cca3982545ea7f14b16dd5956215949994.zip
      DestinationBucketName:
        Ref: FrontendBucketEFE2E19C
      Prune: true
      DistributionId:
        Ref: CloudfrontDistributionE1C514EC
      DistributionPaths:
        - /*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SideKickStack/BucketDeployment/CustomResource/Default
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SideKickStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - arn:aws:s3:::cdk-hnb659fds-assets-339712865666-eu-west-1
              - arn:aws:s3:::cdk-hnb659fds-assets-339712865666-eu-west-1/*
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - FrontendBucketEFE2E19C
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendBucketEFE2E19C
                        - Arn
                    - /*
          - Action:
              - cloudfront:CreateInvalidation
              - cloudfront:GetInvalidation
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      Roles:
        - Ref: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: SideKickStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-339712865666-eu-west-1
        S3Key: 2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d.zip
      Environment:
        Variables:
          AWS_CA_BUNDLE: /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
      Handler: index.handler
      Layers:
        - Ref: BucketDeploymentAwsCliLayerB018DCE1
      Role:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
          - Arn
      Runtime: python3.9
      Timeout: 900
    DependsOn:
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: SideKickStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource
      aws:asset:path: asset.2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d
      aws:asset:is-bundled: false
      aws:asset:property: Code
  PoolD3F588B8:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_phone_number
            Priority: 1
          - Name: verified_email
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AliasAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      SmsVerificationMessage: The verification code to your new account is {####}
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SideKickStack/Pool/Resource
  Poolappclient2D3B8A6A:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows:
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - openid
      CallbackURLs:
        - Fn::Join:
            - ""
            - - https://
              - Fn::GetAtt:
                  - CloudfrontDistributionE1C514EC
                  - DomainName
              - /home
      LogoutURLs:
        - Fn::Join:
            - ""
            - - https://
              - Fn::GetAtt:
                  - CloudfrontDistributionE1C514EC
                  - DomainName
              - /login
      SupportedIdentityProviders:
        - COGNITO
      UserPoolId:
        Ref: PoolD3F588B8
    Metadata:
      aws:cdk:path: SideKickStack/Pool/app-client/Resource
  domainFBFFA2F6:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: sidekick
      UserPoolId:
        Ref: PoolD3F588B8
    Metadata:
      aws:cdk:path: SideKickStack/domain/Resource
  ApiAuthorizer68095F41:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      AuthorizerResultTtlInSeconds: 300
      AuthorizerUri:
        Fn::Join:
          - ""
          - - "arn:"
            - Fn::Select:
                - 1
                - Fn::Split:
                    - ":"
                    - Fn::GetAtt:
                        - AuthorizerLambda972EEEAB
                        - Arn
            - ":apigateway:"
            - Fn::Select:
                - 3
                - Fn::Split:
                    - ":"
                    - Fn::GetAtt:
                        - AuthorizerLambda972EEEAB
                        - Arn
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
                - AuthorizerLambda972EEEAB
                - Arn
            - /invocations
      IdentitySource: method.request.header.Authorization
      Name: SideKickStackApiAuthorizer429ED155
      RestApiId:
        Ref: sidekickApi0AE7347E
      Type: TOKEN
    Metadata:
      aws:cdk:path: SideKickStack/ApiAuthorizer/Resource
  sidekickApi0AE7347E:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: sidekickApi
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Resource
  sidekickApiDeploymentAB9EE982d0bfcce1390130c70bcb523f7deb52ef:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: Automatically created by the RestApi construct
      RestApiId:
        Ref: sidekickApi0AE7347E
    DependsOn:
      - ApiAuthorizer68095F41
      - sidekickApicasescaseDELETE2CD57AAA
      - sidekickApicasescaseGETB2B413F1
      - sidekickApicasescaseOPTIONS654ED7E9
      - sidekickApicasescasePUT40F06B47
      - sidekickApicasescaseED3D69DA
      - sidekickApicasesGET02507037
      - sidekickApicasesOPTIONS03B350A6
      - sidekickApicasesPOSTA55CD863
      - sidekickApicases90E71DBC
      - sidekickApiclientsclientDELETEC83F0E18
      - sidekickApiclientsclientGET59B212A8
      - sidekickApiclientsclientOPTIONS9A935895
      - sidekickApiclientsclientPUTC39DDD6C
      - sidekickApiclientsclient2FDD5A70
      - sidekickApiclientsGETC3EA5941
      - sidekickApiclientsOPTIONS096E472B
      - sidekickApiclientsPOSTB25767AA
      - sidekickApiclients000D105A
      - sidekickApidownloadcaseIdGET08765CDF
      - sidekickApidownloadcaseIdOPTIONS3C598760
      - sidekickApidownloadcaseId190C43B8
      - sidekickApidownloadOPTIONSDA872758
      - sidekickApidownload5A3A6B4C
      - sidekickApiingestionOPTIONS4602E075
      - sidekickApiingestionPOST37261988
      - sidekickApiingestion7F30836D
      - sidekickApiOPTIONS7B71AC7C
      - sidekickApiuploadcaseIdGET2F462E84
      - sidekickApiuploadcaseIdOPTIONS82A374BF
      - sidekickApiuploadcaseId67236B47
      - sidekickApiuploadOPTIONSE8FC28C9
      - sidekickApiupload924CAD0F
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Deployment/Resource
  sidekickApiDeploymentStageprodB57F21F2:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: sidekickApiDeploymentAB9EE982d0bfcce1390130c70bcb523f7deb52ef
      RestApiId:
        Ref: sidekickApi0AE7347E
      StageName: prod
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/DeploymentStage.prod/Resource
  sidekickApiOPTIONS7B71AC7C:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Fn::GetAtt:
          - sidekickApi0AE7347E
          - RootResourceId
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/OPTIONS/Resource
  sidekickApicases90E71DBC:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - sidekickApi0AE7347E
          - RootResourceId
      PathPart: cases
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/Resource
  sidekickApicasesOPTIONS03B350A6:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: sidekickApicases90E71DBC
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/OPTIONS/Resource
  sidekickApicasesGETApiPermissionSideKickStacksidekickApiA2901C09GETcases3D61E2FA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /
            - Ref: sidekickApiDeploymentStageprodB57F21F2
            - /GET/cases
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/GET/ApiPermission.SideKickStacksidekickApiA2901C09.GET..cases
  sidekickApicasesGETApiPermissionTestSideKickStacksidekickApiA2901C09GETcases3D6F371B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /test-invoke-stage/GET/cases
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/GET/ApiPermission.Test.SideKickStacksidekickApiA2901C09.GET..cases
  sidekickApicasesGET02507037:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ApiAuthorizer68095F41
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - sidekickApiLambda9B98FB90
                  - Arn
              - /invocations
      ResourceId:
        Ref: sidekickApicases90E71DBC
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/GET/Resource
  sidekickApicasesPOSTApiPermissionSideKickStacksidekickApiA2901C09POSTcases845D392D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /
            - Ref: sidekickApiDeploymentStageprodB57F21F2
            - /POST/cases
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/POST/ApiPermission.SideKickStacksidekickApiA2901C09.POST..cases
  sidekickApicasesPOSTApiPermissionTestSideKickStacksidekickApiA2901C09POSTcases18A859B2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /test-invoke-stage/POST/cases
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/POST/ApiPermission.Test.SideKickStacksidekickApiA2901C09.POST..cases
  sidekickApicasesPOSTA55CD863:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ApiAuthorizer68095F41
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - sidekickApiLambda9B98FB90
                  - Arn
              - /invocations
      ResourceId:
        Ref: sidekickApicases90E71DBC
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/POST/Resource
  sidekickApicasescaseED3D69DA:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: sidekickApicases90E71DBC
      PathPart: "{case}"
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/{case}/Resource
  sidekickApicasescaseOPTIONS654ED7E9:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: sidekickApicasescaseED3D69DA
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/{case}/OPTIONS/Resource
  sidekickApicasescaseGETApiPermissionSideKickStacksidekickApiA2901C09GETcasescase1AF5F4D7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /
            - Ref: sidekickApiDeploymentStageprodB57F21F2
            - /GET/cases/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/{case}/GET/ApiPermission.SideKickStacksidekickApiA2901C09.GET..cases.{case}
  sidekickApicasescaseGETApiPermissionTestSideKickStacksidekickApiA2901C09GETcasescaseE8071799:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /test-invoke-stage/GET/cases/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/{case}/GET/ApiPermission.Test.SideKickStacksidekickApiA2901C09.GET..cases.{case}
  sidekickApicasescaseGETB2B413F1:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ApiAuthorizer68095F41
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - sidekickApiLambda9B98FB90
                  - Arn
              - /invocations
      ResourceId:
        Ref: sidekickApicasescaseED3D69DA
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/{case}/GET/Resource
  sidekickApicasescasePUTApiPermissionSideKickStacksidekickApiA2901C09PUTcasescase2A2634DA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /
            - Ref: sidekickApiDeploymentStageprodB57F21F2
            - /PUT/cases/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/{case}/PUT/ApiPermission.SideKickStacksidekickApiA2901C09.PUT..cases.{case}
  sidekickApicasescasePUTApiPermissionTestSideKickStacksidekickApiA2901C09PUTcasescaseFF93ACB4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /test-invoke-stage/PUT/cases/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/{case}/PUT/ApiPermission.Test.SideKickStacksidekickApiA2901C09.PUT..cases.{case}
  sidekickApicasescasePUT40F06B47:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ApiAuthorizer68095F41
      HttpMethod: PUT
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - sidekickApiLambda9B98FB90
                  - Arn
              - /invocations
      ResourceId:
        Ref: sidekickApicasescaseED3D69DA
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/{case}/PUT/Resource
  sidekickApicasescaseDELETEApiPermissionSideKickStacksidekickApiA2901C09DELETEcasescaseD6E7BA9E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /
            - Ref: sidekickApiDeploymentStageprodB57F21F2
            - /DELETE/cases/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/{case}/DELETE/ApiPermission.SideKickStacksidekickApiA2901C09.DELETE..cases.{case}
  sidekickApicasescaseDELETEApiPermissionTestSideKickStacksidekickApiA2901C09DELETEcasescase7F43544E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /test-invoke-stage/DELETE/cases/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/{case}/DELETE/ApiPermission.Test.SideKickStacksidekickApiA2901C09.DELETE..cases.{case}
  sidekickApicasescaseDELETE2CD57AAA:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ApiAuthorizer68095F41
      HttpMethod: DELETE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - sidekickApiLambda9B98FB90
                  - Arn
              - /invocations
      ResourceId:
        Ref: sidekickApicasescaseED3D69DA
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/cases/{case}/DELETE/Resource
  sidekickApiclients000D105A:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - sidekickApi0AE7347E
          - RootResourceId
      PathPart: clients
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/Resource
  sidekickApiclientsOPTIONS096E472B:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: sidekickApiclients000D105A
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/OPTIONS/Resource
  sidekickApiclientsGETApiPermissionSideKickStacksidekickApiA2901C09GETclients561C39FB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /
            - Ref: sidekickApiDeploymentStageprodB57F21F2
            - /GET/clients
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/GET/ApiPermission.SideKickStacksidekickApiA2901C09.GET..clients
  sidekickApiclientsGETApiPermissionTestSideKickStacksidekickApiA2901C09GETclientsB49FA0B6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /test-invoke-stage/GET/clients
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/GET/ApiPermission.Test.SideKickStacksidekickApiA2901C09.GET..clients
  sidekickApiclientsGETC3EA5941:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ApiAuthorizer68095F41
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - sidekickApiLambda9B98FB90
                  - Arn
              - /invocations
      ResourceId:
        Ref: sidekickApiclients000D105A
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/GET/Resource
  sidekickApiclientsPOSTApiPermissionSideKickStacksidekickApiA2901C09POSTclientsF76A3D0B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /
            - Ref: sidekickApiDeploymentStageprodB57F21F2
            - /POST/clients
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/POST/ApiPermission.SideKickStacksidekickApiA2901C09.POST..clients
  sidekickApiclientsPOSTApiPermissionTestSideKickStacksidekickApiA2901C09POSTclients069D87D3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /test-invoke-stage/POST/clients
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/POST/ApiPermission.Test.SideKickStacksidekickApiA2901C09.POST..clients
  sidekickApiclientsPOSTB25767AA:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ApiAuthorizer68095F41
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - sidekickApiLambda9B98FB90
                  - Arn
              - /invocations
      ResourceId:
        Ref: sidekickApiclients000D105A
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/POST/Resource
  sidekickApiclientsclient2FDD5A70:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: sidekickApiclients000D105A
      PathPart: "{client}"
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/{client}/Resource
  sidekickApiclientsclientOPTIONS9A935895:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: sidekickApiclientsclient2FDD5A70
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/{client}/OPTIONS/Resource
  sidekickApiclientsclientGETApiPermissionSideKickStacksidekickApiA2901C09GETclientsclient462C2C75:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /
            - Ref: sidekickApiDeploymentStageprodB57F21F2
            - /GET/clients/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/{client}/GET/ApiPermission.SideKickStacksidekickApiA2901C09.GET..clients.{client}
  sidekickApiclientsclientGETApiPermissionTestSideKickStacksidekickApiA2901C09GETclientsclient4F7C5871:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /test-invoke-stage/GET/clients/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/{client}/GET/ApiPermission.Test.SideKickStacksidekickApiA2901C09.GET..clients.{client}
  sidekickApiclientsclientGET59B212A8:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ApiAuthorizer68095F41
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - sidekickApiLambda9B98FB90
                  - Arn
              - /invocations
      ResourceId:
        Ref: sidekickApiclientsclient2FDD5A70
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/{client}/GET/Resource
  sidekickApiclientsclientPUTApiPermissionSideKickStacksidekickApiA2901C09PUTclientsclientD1FF3770:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /
            - Ref: sidekickApiDeploymentStageprodB57F21F2
            - /PUT/clients/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/{client}/PUT/ApiPermission.SideKickStacksidekickApiA2901C09.PUT..clients.{client}
  sidekickApiclientsclientPUTApiPermissionTestSideKickStacksidekickApiA2901C09PUTclientsclient0848CD0A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /test-invoke-stage/PUT/clients/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/{client}/PUT/ApiPermission.Test.SideKickStacksidekickApiA2901C09.PUT..clients.{client}
  sidekickApiclientsclientPUTC39DDD6C:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ApiAuthorizer68095F41
      HttpMethod: PUT
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - sidekickApiLambda9B98FB90
                  - Arn
              - /invocations
      ResourceId:
        Ref: sidekickApiclientsclient2FDD5A70
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/{client}/PUT/Resource
  sidekickApiclientsclientDELETEApiPermissionSideKickStacksidekickApiA2901C09DELETEclientsclientE71B7069:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /
            - Ref: sidekickApiDeploymentStageprodB57F21F2
            - /DELETE/clients/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/{client}/DELETE/ApiPermission.SideKickStacksidekickApiA2901C09.DELETE..clients.{client}
  sidekickApiclientsclientDELETEApiPermissionTestSideKickStacksidekickApiA2901C09DELETEclientsclient307F68C3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /test-invoke-stage/DELETE/clients/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/{client}/DELETE/ApiPermission.Test.SideKickStacksidekickApiA2901C09.DELETE..clients.{client}
  sidekickApiclientsclientDELETEC83F0E18:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ApiAuthorizer68095F41
      HttpMethod: DELETE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - sidekickApiLambda9B98FB90
                  - Arn
              - /invocations
      ResourceId:
        Ref: sidekickApiclientsclient2FDD5A70
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/clients/{client}/DELETE/Resource
  sidekickApiingestion7F30836D:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - sidekickApi0AE7347E
          - RootResourceId
      PathPart: ingestion
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/ingestion/Resource
  sidekickApiingestionOPTIONS4602E075:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: sidekickApiingestion7F30836D
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/ingestion/OPTIONS/Resource
  sidekickApiingestionPOSTApiPermissionSideKickStacksidekickApiA2901C09POSTingestion9D10D1B6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /
            - Ref: sidekickApiDeploymentStageprodB57F21F2
            - /POST/ingestion
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/ingestion/POST/ApiPermission.SideKickStacksidekickApiA2901C09.POST..ingestion
  sidekickApiingestionPOSTApiPermissionTestSideKickStacksidekickApiA2901C09POSTingestion3BB49596:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - sidekickApiLambda9B98FB90
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /test-invoke-stage/POST/ingestion
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/ingestion/POST/ApiPermission.Test.SideKickStacksidekickApiA2901C09.POST..ingestion
  sidekickApiingestionPOST37261988:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ApiAuthorizer68095F41
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - sidekickApiLambda9B98FB90
                  - Arn
              - /invocations
      ResourceId:
        Ref: sidekickApiingestion7F30836D
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/ingestion/POST/Resource
  sidekickApiupload924CAD0F:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - sidekickApi0AE7347E
          - RootResourceId
      PathPart: upload
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/upload/Resource
  sidekickApiuploadOPTIONSE8FC28C9:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: sidekickApiupload924CAD0F
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/upload/OPTIONS/Resource
  sidekickApiuploadcaseId67236B47:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: sidekickApiupload924CAD0F
      PathPart: "{caseId}"
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/upload/{caseId}/Resource
  sidekickApiuploadcaseIdOPTIONS82A374BF:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: sidekickApiuploadcaseId67236B47
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/upload/{caseId}/OPTIONS/Resource
  sidekickApiuploadcaseIdGETApiPermissionSideKickStacksidekickApiA2901C09GETuploadcaseIdE28DC5C1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GeneratePresignedUrlLambdaBD396619
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /
            - Ref: sidekickApiDeploymentStageprodB57F21F2
            - /GET/upload/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/upload/{caseId}/GET/ApiPermission.SideKickStacksidekickApiA2901C09.GET..upload.{caseId}
  sidekickApiuploadcaseIdGETApiPermissionTestSideKickStacksidekickApiA2901C09GETuploadcaseIdF05A731E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GeneratePresignedUrlLambdaBD396619
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /test-invoke-stage/GET/upload/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/upload/{caseId}/GET/ApiPermission.Test.SideKickStacksidekickApiA2901C09.GET..upload.{caseId}
  sidekickApiuploadcaseIdGET2F462E84:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ApiAuthorizer68095F41
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GeneratePresignedUrlLambdaBD396619
                  - Arn
              - /invocations
      ResourceId:
        Ref: sidekickApiuploadcaseId67236B47
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/upload/{caseId}/GET/Resource
  sidekickApidownload5A3A6B4C:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - sidekickApi0AE7347E
          - RootResourceId
      PathPart: download
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/download/Resource
  sidekickApidownloadOPTIONSDA872758:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: sidekickApidownload5A3A6B4C
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/download/OPTIONS/Resource
  sidekickApidownloadcaseId190C43B8:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: sidekickApidownload5A3A6B4C
      PathPart: "{caseId}"
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/download/{caseId}/Resource
  sidekickApidownloadcaseIdOPTIONS3C598760:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: sidekickApidownloadcaseId190C43B8
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/download/{caseId}/OPTIONS/Resource
  sidekickApidownloadcaseIdGETApiPermissionSideKickStacksidekickApiA2901C09GETdownloadcaseId4E1C8013:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DownloadLambdaD45F379F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /
            - Ref: sidekickApiDeploymentStageprodB57F21F2
            - /GET/download/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/download/{caseId}/GET/ApiPermission.SideKickStacksidekickApiA2901C09.GET..download.{caseId}
  sidekickApidownloadcaseIdGETApiPermissionTestSideKickStacksidekickApiA2901C09GETdownloadcaseId3A7F16B5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DownloadLambdaD45F379F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:eu-west-1:339712865666:"
            - Ref: sidekickApi0AE7347E
            - /test-invoke-stage/GET/download/*
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/download/{caseId}/GET/ApiPermission.Test.SideKickStacksidekickApiA2901C09.GET..download.{caseId}
  sidekickApidownloadcaseIdGET08765CDF:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ApiAuthorizer68095F41
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - DownloadLambdaD45F379F
                  - Arn
              - /invocations
      ResourceId:
        Ref: sidekickApidownloadcaseId190C43B8
      RestApiId:
        Ref: sidekickApi0AE7347E
    Metadata:
      aws:cdk:path: SideKickStack/sidekickApi/Default/download/{caseId}/GET/Resource
  textractResponseParserServiceRoleE942AC8E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SideKickStack/textractResponseParser/ServiceRole/Resource
  textractResponseParserServiceRoleDefaultPolicy6C69047F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
              - s3:PutObject
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - caseBucketC8DD2304
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - caseBucketC8DD2304
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: textractResponseParserServiceRoleDefaultPolicy6C69047F
      Roles:
        - Ref: textractResponseParserServiceRoleE942AC8E
    Metadata:
      aws:cdk:path: SideKickStack/textractResponseParser/ServiceRole/DefaultPolicy/Resource
  textractResponseParser6D7F17BE:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-339712865666-eu-west-1
        S3Key: d3b057e4b72e0269320385843cde9a52b5cb9ae64ccc0cd8161e89565e9fccab.zip
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - textractResponseParserServiceRoleE942AC8E
          - Arn
      Runtime: python3.9
      Timeout: 60
    DependsOn:
      - textractResponseParserServiceRoleDefaultPolicy6C69047F
      - textractResponseParserServiceRoleE942AC8E
    Metadata:
      aws:cdk:path: SideKickStack/textractResponseParser/Resource
      aws:asset:path: asset.d3b057e4b72e0269320385843cde9a52b5cb9ae64ccc0cd8161e89565e9fccab
      aws:asset:is-bundled: true
      aws:asset:property: Code
  GeneratePresignedUrlLambdaServiceRoleD3347AFA:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SideKickStack/GeneratePresignedUrlLambda/ServiceRole/Resource
  GeneratePresignedUrlLambdaServiceRoleDefaultPolicy787B6580:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutObject
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - caseBucketC8DD2304
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - caseBucketC8DD2304
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: GeneratePresignedUrlLambdaServiceRoleDefaultPolicy787B6580
      Roles:
        - Ref: GeneratePresignedUrlLambdaServiceRoleD3347AFA
    Metadata:
      aws:cdk:path: SideKickStack/GeneratePresignedUrlLambda/ServiceRole/DefaultPolicy/Resource
  GeneratePresignedUrlLambdaBD396619:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-339712865666-eu-west-1
        S3Key: ac66b61561acf8458a488a43b722c33a4f30a7653ad3d087fc27be29ac47a413.zip
      Environment:
        Variables:
          S3_BUCKET:
            Ref: caseBucketC8DD2304
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - GeneratePresignedUrlLambdaServiceRoleD3347AFA
          - Arn
      Runtime: python3.9
    DependsOn:
      - GeneratePresignedUrlLambdaServiceRoleDefaultPolicy787B6580
      - GeneratePresignedUrlLambdaServiceRoleD3347AFA
    Metadata:
      aws:cdk:path: SideKickStack/GeneratePresignedUrlLambda/Resource
      aws:asset:path: asset.ac66b61561acf8458a488a43b722c33a4f30a7653ad3d087fc27be29ac47a413
      aws:asset:is-bundled: true
      aws:asset:property: Code
  DownloadLambdaServiceRole386AE6B2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SideKickStack/DownloadLambda/ServiceRole/Resource
  DownloadLambdaServiceRoleDefaultPolicy08B1482A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
              - s3:ListBucket
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - caseBucketC8DD2304
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - caseBucketC8DD2304
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: DownloadLambdaServiceRoleDefaultPolicy08B1482A
      Roles:
        - Ref: DownloadLambdaServiceRole386AE6B2
    Metadata:
      aws:cdk:path: SideKickStack/DownloadLambda/ServiceRole/DefaultPolicy/Resource
  DownloadLambdaD45F379F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-339712865666-eu-west-1
        S3Key: 00e678b6117b9be39644e330110d7353e10ecd938cb9299b50c1b5de10d3ced6.zip
      Environment:
        Variables:
          S3_BUCKET:
            Ref: caseBucketC8DD2304
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - DownloadLambdaServiceRole386AE6B2
          - Arn
      Runtime: python3.9
    DependsOn:
      - DownloadLambdaServiceRoleDefaultPolicy08B1482A
      - DownloadLambdaServiceRole386AE6B2
    Metadata:
      aws:cdk:path: SideKickStack/DownloadLambda/Resource
      aws:asset:path: asset.00e678b6117b9be39644e330110d7353e10ecd938cb9299b50c1b5de10d3ced6
      aws:asset:is-bundled: true
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/3VT227bMAz9lr4rWm8Pe3WSdSiQoka67TVQZMZlI4uGLgkyw/8+SnYSr9iAADwkj455y728e7yVtzfq6Ge62s8MbmX3FpTeCw5tOjiADV5235KdRy8WO3vB62ggBZLthX+Q3TzqPYQUG9FgSjKoT9fw6A/OXHl+rQ3FaufIBtkt0QeH2xiQrHh1WKMttAbvnyv+MoastEgPntKD/zGmMr0wqtlWSnZP0eoszIwpLsE16P3ordQJ3C9w2X9DWxsIdOH3AlUjuzWN/Sd77XFAaSCbTnkPPL8iGVFBa+jUcIVyaH15CTA7QLsb9f0mKL/3cpVrfrYH2sPfBNmVLC14UwFelH5HmyuZ+r2oTlY1VPFGf6jtUGoGPAyqWWJF9XdHsc0Nj5g3QbXFQLL76cGVRCalL/gMFga57GlqjJzdJTUK7ZQwRHqhWqy5zKM6cWHcmS1ieCeHv8El+sQb+l+DD0WLedIjvA4uL/rq8QDq8yQYMJ+i05BuTLwAC1cpOaJzdlTOuO/FIvpAzb+Sn1KlowNW4LJ6XnH6Kh/LVXm4uo1J57Thf5Q2KIuj51nlC0virzG0kQ/AUgXyw3853H2V/Lu/+fCIMxf5nhuQ68H+ATnzo42wAwAA
    Metadata:
      aws:cdk:path: SideKickStack/CDKMetadata/Default
Outputs:
  sidekickApiEndpoint683E4901:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: sidekickApi0AE7347E
          - .execute-api.eu-west-1.
          - Ref: AWS::URLSuffix
          - /
          - Ref: sidekickApiDeploymentStageprodB57F21F2
          - /
  CloudFrontURL:
    Description: The distribution URL
    Value:
      Fn::GetAtt:
        - CloudfrontDistributionE1C514EC
        - DomainName
    Export:
      Name: CloudfrontURL
  BucketName:
    Description: The name of the S3 bucket
    Value:
      Ref: FrontendBucketEFE2E19C
    Export:
      Name: BucketName
  CaseApiUrl:
    Description: The case api URL
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: sidekickApi0AE7347E
          - .execute-api.eu-west-1.
          - Ref: AWS::URLSuffix
          - /
          - Ref: sidekickApiDeploymentStageprodB57F21F2
          - /
    Export:
      Name: CaseApiUrl
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

